###
# Generated by mmym.theo.do
###

EXTRACT_VERSION:=grep -o '[0-9\.]\+' | head -n 1

TARGET_VERSION_NODE_0:=v10
TARGET_VERSION_DOCKER_1:=18.9
TARGET_VERSION_DOCKER COMPOSE_2:=1.23.2

.PHONY: help
help:
	@grep -E '^[a-zA-Z_-]+:.?## .$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

.PHONY: install
install: check-dependencies ## Install the project
	@# Some installation steps

.PHONY: check-dependencies
check-dependencies:
	@# Checks that Node is installed
	@node -v > /dev/null 2>&1 || (echo -e 'Node is not installed\n' && exit 42)
	@# Checks that Node has at least version v10
ifneq ($(shell python -c 'print("$(shell node -v | $(EXTRACT_VERSION))" if tuple(map(int,("$(shell node -v | $(EXTRACT_VERSION))".split("."))))<tuple(map(int,("$(shell echo "$(TARGET_VERSION_NODE_0)" | $(EXTRACT_VERSION))".split(".")))) else "$(shell echo "$(TARGET_VERSION_NODE_0)" | $(EXTRACT_VERSION))")'),$(shell echo "$(TARGET_VERSION_NODE_0)" | $(EXTRACT_VERSION)))
	@echo -e 'Node has version $(shell node -v | $(EXTRACT_VERSION)), expected $(shell echo "$(TARGET_VERSION_NODE_0)" | $(EXTRACT_VERSION)) or superior.\n' && exit 42
endif
	@# Checks that Docker is installed
	@docker -v > /dev/null 2>&1 || (echo -e 'Docker is not installed\n' && exit 42)
	@# Checks that Docker has at least version 18.9
ifneq ($(shell python -c 'print("$(shell docker -v | $(EXTRACT_VERSION))" if tuple(map(int,("$(shell docker -v | $(EXTRACT_VERSION))".split("."))))<tuple(map(int,("$(shell echo "$(TARGET_VERSION_DOCKER_1)" | $(EXTRACT_VERSION))".split(".")))) else "$(shell echo "$(TARGET_VERSION_DOCKER_1)" | $(EXTRACT_VERSION))")'),$(shell echo "$(TARGET_VERSION_DOCKER_1)" | $(EXTRACT_VERSION)))
	@echo -e 'Docker has version $(shell docker -v | $(EXTRACT_VERSION)), expected $(shell echo "$(TARGET_VERSION_DOCKER_1)" | $(EXTRACT_VERSION)) or superior.\n' && exit 42
endif
	@# Checks that Docker Compose is installed
	@docker-compose -v > /dev/null 2>&1 || (echo -e 'Docker Compose is not installed\n' && exit 42)
	@# Checks that Docker Compose has at least version 1.23.0
ifneq ($(shell python -c 'print("$(shell docker-compose -v | $(EXTRACT_VERSION))" if tuple(map(int,("$(shell docker-compose -v | $(EXTRACT_VERSION))".split("."))))<tuple(map(int,("$(shell echo "$(TARGET_VERSION_DOCKER COMPOSE_2)" | $(EXTRACT_VERSION))".split(".")))) else "$(shell echo "$(TARGET_VERSION_DOCKER COMPOSE_2)" | $(EXTRACT_VERSION))")'),$(shell echo "$(TARGET_VERSION_DOCKER COMPOSE_2)" | $(EXTRACT_VERSION)))
	@echo -e 'Docker Compose has version $(shell docker-compose -v | $(EXTRACT_VERSION)), expected $(shell echo "$(TARGET_VERSION_DOCKER COMPOSE_2)" | $(EXTRACT_VERSION)) or superior.\n' && exit 42
endif

###
# Generated by hand
###

backend/install: .env
	TMPDIR=/private$$TMPDIR docker-compose up -d
	docker-compose exec backend ./manage.py migrate
	docker-compose exec backend ./manage.py createcachetable

backend/start:
	TMPDIR=/private$$TMPDIR docker-compose up

backend/migrate:
	docker-compose exec backend ./manage.py migrate

frontend/install: frontend/.env
	yarn --cwd frontend install

frontend/start:
	yarn --cwd frontend start

createsuperuser:
	docker-compose exec backend ./manage.py createsuperuser

.env: .env.example
	@if [ -f .env ]; \
	then\
		echo '\033[1;41m/!\ The .env.example file has changed. Please check your .env file (this message will not be displayed again).\033[0m';\
		touch .env;\
		exit 1;\
	else\
		echo cp .env.example .env;\
		cp .env.example .env;\
	fi

frontend/.env: frontend/.env.example
	@if [ -f frontend/.env ]; \
	then\
		echo '\033[1;41m/!\ The frontend/.env.example file has changed. Please check your frontend/.env file (this message will not be displayed again).\033[0m';\
		touch frontend/.env;\
		exit 1;\
	else\
		echo cp frontend/.env.example frontend/.env;\
		cp frontend/.env.example frontend/.env;\
	fi
